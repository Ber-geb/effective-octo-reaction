
Midterm_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00000b64  00000bd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b64  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cd8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a16  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000793  00000000  00000000  0000176e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b0  00000000  00000000  00001f01  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  000022b4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043a  00000000  00000000  00002344  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002c8  00000000  00000000  0000277e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002a46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e6       	ldi	r30, 0x64	; 100
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 3a       	cpi	r26, 0xA4	; 164
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 ea       	ldi	r26, 0xA4	; 164
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 3a       	cpi	r26, 0xA4	; 164
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 77 00 	call	0xee	; 0xee <main>
  9e:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <usart_init>:

void usart_init(void){
	
	//UBRR0H = (uint8_t)(BAUD_PRESCALLER >> 8);
	//UBRR0L = (uint8_t)(BAUD_PRESCALLER);
	UBRR0 = 8;	//Manually setting to value from atmega328p datasheet as the formula give a float value that has too much error.
  a6:	88 e0       	ldi	r24, 0x08	; 8
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  ae:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  b2:	88 e1       	ldi	r24, 0x18	; 24
  b4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<< UCSZ01)|(1<<UCSZ00);
  b8:	86 e0       	ldi	r24, 0x06	; 6
  ba:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  be:	08 95       	ret

000000c0 <usart_send>:
}

void usart_send(unsigned char ch){
	while(!(UCSR0A & (1<<UDRE0)));			//wait until UDR0 is empty
  c0:	e0 ec       	ldi	r30, 0xC0	; 192
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	90 81       	ld	r25, Z
  c6:	95 ff       	sbrs	r25, 5
  c8:	fd cf       	rjmp	.-6      	; 0xc4 <usart_send+0x4>
	UDR0 = ch;								//transmit ch
  ca:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  ce:	08 95       	ret

000000d0 <usart_putstring>:
}

void usart_putstring(char* ch){
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	ec 01       	movw	r28, r24
	
	while(*ch != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
  d6:	88 81       	ld	r24, Y
  d8:	88 23       	and	r24, r24
  da:	31 f0       	breq	.+12     	; 0xe8 <usart_putstring+0x18>
  dc:	21 96       	adiw	r28, 0x01	; 1
		usart_send(*ch);    //Using the simple send function we send one char at a time
  de:	0e 94 60 00 	call	0xc0	; 0xc0 <usart_send>
	UDR0 = ch;								//transmit ch
}

void usart_putstring(char* ch){
	
	while(*ch != 0x00){    //Here we check if there is still more chars to send, this is done checking the actual char and see if it is different from the null char
  e2:	89 91       	ld	r24, Y+
  e4:	81 11       	cpse	r24, r1
  e6:	fb cf       	rjmp	.-10     	; 0xde <usart_putstring+0xe>
		usart_send(*ch);    //Using the simple send function we send one char at a time
	ch++;}        //We increment the pointer so we can read the next char
	
}
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <main>:

volatile uint8_t compACheck;


int main(void)
{
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	cc 5b       	subi	r28, 0xBC	; 188
  f8:	d1 09       	sbc	r29, r1
  fa:	0f b6       	in	r0, 0x3f	; 63
  fc:	f8 94       	cli
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0f be       	out	0x3f, r0	; 63
 102:	cd bf       	out	0x3d, r28	; 61
    usart_init();
 104:	0e 94 53 00 	call	0xa6	; 0xa6 <usart_init>
	
	/**Setup and enable ADC **/
	ADMUX = (0<<REFS1)|					//Reference Selection Bits
 108:	80 e4       	ldi	r24, 0x40	; 64
 10a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<REFS0)|							//AVcc - external cap AREF
	(0<<ADLAR);						//ADC Left Adjust Result
	ADCSRA = (1<<ADEN)|					//ADC Enable
 10e:	85 e8       	ldi	r24, 0x85	; 133
 110:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(1<<ADPS2)|							//ADC Prescaler Select Bits
	(0<<ADPS1)|
	(1<<ADPS0);
	
	char thingSpeakGET[100];
	char setMUX[] = "AT+CIPMUX=0\r\n"; //Repeating the steps ESPlorer used
 114:	8e e0       	ldi	r24, 0x0E	; 14
 116:	eb e4       	ldi	r30, 0x4B	; 75
 118:	f1 e0       	ldi	r31, 0x01	; 1
 11a:	de 01       	movw	r26, r28
 11c:	ab 59       	subi	r26, 0x9B	; 155
 11e:	bf 4f       	sbci	r27, 0xFF	; 255
 120:	01 90       	ld	r0, Z+
 122:	0d 92       	st	X+, r0
 124:	8a 95       	dec	r24
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0x32>
	char thingSpeakStart[] = "AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n" ;
 128:	8c e2       	ldi	r24, 0x2C	; 44
 12a:	e9 e5       	ldi	r30, 0x59	; 89
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	de 01       	movw	r26, r28
 130:	ad 58       	subi	r26, 0x8D	; 141
 132:	bf 4f       	sbci	r27, 0xFF	; 255
 134:	01 90       	ld	r0, Z+
 136:	0d 92       	st	X+, r0
 138:	8a 95       	dec	r24
 13a:	e1 f7       	brne	.-8      	; 0x134 <main+0x46>
	char thingSpeakSend[] = "AT+CIPSEND=80\r\n"; //saying we'll send more data than we actually will 
 13c:	80 e1       	ldi	r24, 0x10	; 16
 13e:	e5 e8       	ldi	r30, 0x85	; 133
 140:	f1 e0       	ldi	r31, 0x01	; 1
 142:	de 01       	movw	r26, r28
 144:	a1 56       	subi	r26, 0x61	; 97
 146:	bf 4f       	sbci	r27, 0xFF	; 255
 148:	01 90       	ld	r0, Z+
 14a:	0d 92       	st	X+, r0
 14c:	8a 95       	dec	r24
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0x5a>
	char thingSpeakClose[] = "AT+CIPCLOSE\r\n"; //ending the send communication
 150:	8e e0       	ldi	r24, 0x0E	; 14
 152:	e5 e9       	ldi	r30, 0x95	; 149
 154:	f1 e0       	ldi	r31, 0x01	; 1
 156:	de 01       	movw	r26, r28
 158:	a1 55       	subi	r26, 0x51	; 81
 15a:	bf 4f       	sbci	r27, 0xFF	; 255
 15c:	01 90       	ld	r0, Z+
 15e:	0d 92       	st	X+, r0
 160:	8a 95       	dec	r24
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0x6e>
	
	while(1){
		ADCSRA |= (1<<ADSC);			//start conversion
 164:	0a e7       	ldi	r16, 0x7A	; 122
 166:	10 e0       	ldi	r17, 0x00	; 0
		while ((ADCSRA&(1<<ADIF))==0);	//wait for conversion to finish
		
		ADCSRA |= (1<<ADIF);
		
		int a = ADCL;
 168:	0f 2e       	mov	r0, r31
 16a:	f8 e7       	ldi	r31, 0x78	; 120
 16c:	8f 2e       	mov	r8, r31
 16e:	91 2c       	mov	r9, r1
 170:	f0 2d       	mov	r31, r0
		a = a | (ADCH << 8);
 172:	0f 2e       	mov	r0, r31
 174:	f9 e7       	ldi	r31, 0x79	; 121
 176:	6f 2e       	mov	r6, r31
 178:	71 2c       	mov	r7, r1
 17a:	f0 2d       	mov	r31, r0
		a = (a/1024.0) * (5000/10);
		a = (a*9/5)+32;	//convert from celsius to fahrenheit
 17c:	0f 2e       	mov	r0, r31
 17e:	f5 e0       	ldi	r31, 0x05	; 5
 180:	4f 2e       	mov	r4, r31
 182:	51 2c       	mov	r5, r1
 184:	f0 2d       	mov	r31, r0
		_delay_ms(1000); //add in delay to allow for proper interaction
		
		usart_putstring(thingSpeakSend);
		_delay_ms(1000);
		
	    snprintf(thingSpeakGET, sizeof(thingSpeakGET), "GET https://api.thingspeak.com/update?api_key=27KKGYHOI2F2SN15&field1=%d\r\n", a); 
 186:	0f 2e       	mov	r0, r31
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	af 2e       	mov	r10, r31
 18c:	f1 e0       	ldi	r31, 0x01	; 1
 18e:	bf 2e       	mov	r11, r31
 190:	f0 2d       	mov	r31, r0
 192:	0f 2e       	mov	r0, r31
 194:	f4 e6       	ldi	r31, 0x64	; 100
 196:	3f 2e       	mov	r3, r31
 198:	f0 2d       	mov	r31, r0
 19a:	ce 01       	movw	r24, r28
 19c:	01 96       	adiw	r24, 0x01	; 1
 19e:	6c 01       	movw	r12, r24
	char thingSpeakStart[] = "AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n" ;
	char thingSpeakSend[] = "AT+CIPSEND=80\r\n"; //saying we'll send more data than we actually will 
	char thingSpeakClose[] = "AT+CIPCLOSE\r\n"; //ending the send communication
	
	while(1){
		ADCSRA |= (1<<ADSC);			//start conversion
 1a0:	f8 01       	movw	r30, r16
 1a2:	80 81       	ld	r24, Z
 1a4:	80 64       	ori	r24, 0x40	; 64
 1a6:	80 83       	st	Z, r24
		while ((ADCSRA&(1<<ADIF))==0);	//wait for conversion to finish
 1a8:	f8 01       	movw	r30, r16
 1aa:	80 81       	ld	r24, Z
 1ac:	84 ff       	sbrs	r24, 4
 1ae:	fc cf       	rjmp	.-8      	; 0x1a8 <main+0xba>
		
		ADCSRA |= (1<<ADIF);
 1b0:	80 81       	ld	r24, Z
 1b2:	80 61       	ori	r24, 0x10	; 16
 1b4:	80 83       	st	Z, r24
		
		int a = ADCL;
 1b6:	f4 01       	movw	r30, r8
 1b8:	60 81       	ld	r22, Z
		a = a | (ADCH << 8);
 1ba:	f3 01       	movw	r30, r6
 1bc:	80 81       	ld	r24, Z
		a = (a/1024.0) * (5000/10);
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	78 2b       	or	r23, r24
 1c2:	07 2e       	mov	r0, r23
 1c4:	00 0c       	add	r0, r0
 1c6:	88 0b       	sbc	r24, r24
 1c8:	99 0b       	sbc	r25, r25
 1ca:	0e 94 97 01 	call	0x32e	; 0x32e <__floatsisf>
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	40 e8       	ldi	r20, 0x80	; 128
 1d4:	5a e3       	ldi	r21, 0x3A	; 58
 1d6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
 1da:	20 e0       	ldi	r18, 0x00	; 0
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	4a ef       	ldi	r20, 0xFA	; 250
 1e0:	53 e4       	ldi	r21, 0x43	; 67
 1e2:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__mulsf3>
		a = (a*9/5)+32;	//convert from celsius to fahrenheit
 1e6:	0e 94 5f 01 	call	0x2be	; 0x2be <__fixsfsi>
 1ea:	9b 01       	movw	r18, r22
 1ec:	22 0f       	add	r18, r18
 1ee:	33 1f       	adc	r19, r19
 1f0:	22 0f       	add	r18, r18
 1f2:	33 1f       	adc	r19, r19
 1f4:	22 0f       	add	r18, r18
 1f6:	33 1f       	adc	r19, r19
 1f8:	c9 01       	movw	r24, r18
 1fa:	86 0f       	add	r24, r22
 1fc:	97 1f       	adc	r25, r23
 1fe:	b2 01       	movw	r22, r4
 200:	0e 94 90 02 	call	0x520	; 0x520 <__divmodhi4>
 204:	7b 01       	movw	r14, r22
 206:	f0 e2       	ldi	r31, 0x20	; 32
 208:	ef 0e       	add	r14, r31
 20a:	f1 1c       	adc	r15, r1
		
		a = a % 100;
		
		
		 
		usart_putstring(setMUX); //Sends string to USART using USART_send to send each character of string	
 20c:	ce 01       	movw	r24, r28
 20e:	8b 59       	subi	r24, 0x9B	; 155
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 216:	2f ef       	ldi	r18, 0xFF	; 255
 218:	83 ed       	ldi	r24, 0xD3	; 211
 21a:	90 e3       	ldi	r25, 0x30	; 48
 21c:	21 50       	subi	r18, 0x01	; 1
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	90 40       	sbci	r25, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0x12e>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x138>
 226:	00 00       	nop
		_delay_ms(1000);
		
		usart_putstring(thingSpeakStart);
 228:	ce 01       	movw	r24, r28
 22a:	8d 58       	subi	r24, 0x8D	; 141
 22c:	9f 4f       	sbci	r25, 0xFF	; 255
 22e:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_putstring>
 232:	ef ef       	ldi	r30, 0xFF	; 255
 234:	f3 ed       	ldi	r31, 0xD3	; 211
 236:	20 e3       	ldi	r18, 0x30	; 48
 238:	e1 50       	subi	r30, 0x01	; 1
 23a:	f0 40       	sbci	r31, 0x00	; 0
 23c:	20 40       	sbci	r18, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x14a>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x154>
 242:	00 00       	nop
		_delay_ms(1000); //add in delay to allow for proper interaction
		
		usart_putstring(thingSpeakSend);
 244:	ce 01       	movw	r24, r28
 246:	81 56       	subi	r24, 0x61	; 97
 248:	9f 4f       	sbci	r25, 0xFF	; 255
 24a:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_putstring>
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	93 ed       	ldi	r25, 0xD3	; 211
 252:	e0 e3       	ldi	r30, 0x30	; 48
 254:	81 50       	subi	r24, 0x01	; 1
 256:	90 40       	sbci	r25, 0x00	; 0
 258:	e0 40       	sbci	r30, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x166>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0x170>
 25e:	00 00       	nop
		_delay_ms(1000);
		
	    snprintf(thingSpeakGET, sizeof(thingSpeakGET), "GET https://api.thingspeak.com/update?api_key=27KKGYHOI2F2SN15&field1=%d\r\n", a); 
 260:	c7 01       	movw	r24, r14
 262:	64 e6       	ldi	r22, 0x64	; 100
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	0e 94 90 02 	call	0x520	; 0x520 <__divmodhi4>
 26a:	9f 93       	push	r25
 26c:	8f 93       	push	r24
 26e:	bf 92       	push	r11
 270:	af 92       	push	r10
 272:	1f 92       	push	r1
 274:	3f 92       	push	r3
 276:	df 92       	push	r13
 278:	cf 92       	push	r12
 27a:	0e 94 b8 02 	call	0x570	; 0x570 <snprintf>
		usart_putstring(thingSpeakGET); 
 27e:	c6 01       	movw	r24, r12
 280:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_putstring>
 284:	ff ef       	ldi	r31, 0xFF	; 255
 286:	23 ed       	ldi	r18, 0xD3	; 211
 288:	80 e3       	ldi	r24, 0x30	; 48
 28a:	f1 50       	subi	r31, 0x01	; 1
 28c:	20 40       	sbci	r18, 0x00	; 0
 28e:	80 40       	sbci	r24, 0x00	; 0
 290:	e1 f7       	brne	.-8      	; 0x28a <main+0x19c>
 292:	00 c0       	rjmp	.+0      	; 0x294 <main+0x1a6>
 294:	00 00       	nop
		_delay_ms(1000);

		
		usart_putstring(thingSpeakClose); //ending of the send
 296:	ce 01       	movw	r24, r28
 298:	81 55       	subi	r24, 0x51	; 81
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	0e 94 68 00 	call	0xd0	; 0xd0 <usart_putstring>
 2a0:	9f ef       	ldi	r25, 0xFF	; 255
 2a2:	e3 ed       	ldi	r30, 0xD3	; 211
 2a4:	f0 e3       	ldi	r31, 0x30	; 48
 2a6:	91 50       	subi	r25, 0x01	; 1
 2a8:	e0 40       	sbci	r30, 0x00	; 0
 2aa:	f0 40       	sbci	r31, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0x1b8>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x1c2>
 2b0:	00 00       	nop
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	f8 94       	cli
 2b6:	de bf       	out	0x3e, r29	; 62
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	cd bf       	out	0x3d, r28	; 61
 2bc:	71 cf       	rjmp	.-286    	; 0x1a0 <main+0xb2>

000002be <__fixsfsi>:
 2be:	0e 94 66 01 	call	0x2cc	; 0x2cc <__fixunssfsi>
 2c2:	68 94       	set
 2c4:	b1 11       	cpse	r27, r1
 2c6:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_szero>
 2ca:	08 95       	ret

000002cc <__fixunssfsi>:
 2cc:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__fp_splitA>
 2d0:	88 f0       	brcs	.+34     	; 0x2f4 <__fixunssfsi+0x28>
 2d2:	9f 57       	subi	r25, 0x7F	; 127
 2d4:	98 f0       	brcs	.+38     	; 0x2fc <__fixunssfsi+0x30>
 2d6:	b9 2f       	mov	r27, r25
 2d8:	99 27       	eor	r25, r25
 2da:	b7 51       	subi	r27, 0x17	; 23
 2dc:	b0 f0       	brcs	.+44     	; 0x30a <__fixunssfsi+0x3e>
 2de:	e1 f0       	breq	.+56     	; 0x318 <__fixunssfsi+0x4c>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	1a f0       	brmi	.+6      	; 0x2f0 <__fixunssfsi+0x24>
 2ea:	ba 95       	dec	r27
 2ec:	c9 f7       	brne	.-14     	; 0x2e0 <__fixunssfsi+0x14>
 2ee:	14 c0       	rjmp	.+40     	; 0x318 <__fixunssfsi+0x4c>
 2f0:	b1 30       	cpi	r27, 0x01	; 1
 2f2:	91 f0       	breq	.+36     	; 0x318 <__fixunssfsi+0x4c>
 2f4:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_zero>
 2f8:	b1 e0       	ldi	r27, 0x01	; 1
 2fa:	08 95       	ret
 2fc:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__fp_zero>
 300:	67 2f       	mov	r22, r23
 302:	78 2f       	mov	r23, r24
 304:	88 27       	eor	r24, r24
 306:	b8 5f       	subi	r27, 0xF8	; 248
 308:	39 f0       	breq	.+14     	; 0x318 <__fixunssfsi+0x4c>
 30a:	b9 3f       	cpi	r27, 0xF9	; 249
 30c:	cc f3       	brlt	.-14     	; 0x300 <__fixunssfsi+0x34>
 30e:	86 95       	lsr	r24
 310:	77 95       	ror	r23
 312:	67 95       	ror	r22
 314:	b3 95       	inc	r27
 316:	d9 f7       	brne	.-10     	; 0x30e <__fixunssfsi+0x42>
 318:	3e f4       	brtc	.+14     	; 0x328 <__fixunssfsi+0x5c>
 31a:	90 95       	com	r25
 31c:	80 95       	com	r24
 31e:	70 95       	com	r23
 320:	61 95       	neg	r22
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	08 95       	ret

0000032a <__floatunsisf>:
 32a:	e8 94       	clt
 32c:	09 c0       	rjmp	.+18     	; 0x340 <__floatsisf+0x12>

0000032e <__floatsisf>:
 32e:	97 fb       	bst	r25, 7
 330:	3e f4       	brtc	.+14     	; 0x340 <__floatsisf+0x12>
 332:	90 95       	com	r25
 334:	80 95       	com	r24
 336:	70 95       	com	r23
 338:	61 95       	neg	r22
 33a:	7f 4f       	sbci	r23, 0xFF	; 255
 33c:	8f 4f       	sbci	r24, 0xFF	; 255
 33e:	9f 4f       	sbci	r25, 0xFF	; 255
 340:	99 23       	and	r25, r25
 342:	a9 f0       	breq	.+42     	; 0x36e <__floatsisf+0x40>
 344:	f9 2f       	mov	r31, r25
 346:	96 e9       	ldi	r25, 0x96	; 150
 348:	bb 27       	eor	r27, r27
 34a:	93 95       	inc	r25
 34c:	f6 95       	lsr	r31
 34e:	87 95       	ror	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f1 11       	cpse	r31, r1
 358:	f8 cf       	rjmp	.-16     	; 0x34a <__floatsisf+0x1c>
 35a:	fa f4       	brpl	.+62     	; 0x39a <__floatsisf+0x6c>
 35c:	bb 0f       	add	r27, r27
 35e:	11 f4       	brne	.+4      	; 0x364 <__floatsisf+0x36>
 360:	60 ff       	sbrs	r22, 0
 362:	1b c0       	rjmp	.+54     	; 0x39a <__floatsisf+0x6c>
 364:	6f 5f       	subi	r22, 0xFF	; 255
 366:	7f 4f       	sbci	r23, 0xFF	; 255
 368:	8f 4f       	sbci	r24, 0xFF	; 255
 36a:	9f 4f       	sbci	r25, 0xFF	; 255
 36c:	16 c0       	rjmp	.+44     	; 0x39a <__floatsisf+0x6c>
 36e:	88 23       	and	r24, r24
 370:	11 f0       	breq	.+4      	; 0x376 <__floatsisf+0x48>
 372:	96 e9       	ldi	r25, 0x96	; 150
 374:	11 c0       	rjmp	.+34     	; 0x398 <__floatsisf+0x6a>
 376:	77 23       	and	r23, r23
 378:	21 f0       	breq	.+8      	; 0x382 <__floatsisf+0x54>
 37a:	9e e8       	ldi	r25, 0x8E	; 142
 37c:	87 2f       	mov	r24, r23
 37e:	76 2f       	mov	r23, r22
 380:	05 c0       	rjmp	.+10     	; 0x38c <__floatsisf+0x5e>
 382:	66 23       	and	r22, r22
 384:	71 f0       	breq	.+28     	; 0x3a2 <__floatsisf+0x74>
 386:	96 e8       	ldi	r25, 0x86	; 134
 388:	86 2f       	mov	r24, r22
 38a:	70 e0       	ldi	r23, 0x00	; 0
 38c:	60 e0       	ldi	r22, 0x00	; 0
 38e:	2a f0       	brmi	.+10     	; 0x39a <__floatsisf+0x6c>
 390:	9a 95       	dec	r25
 392:	66 0f       	add	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	da f7       	brpl	.-10     	; 0x390 <__floatsisf+0x62>
 39a:	88 0f       	add	r24, r24
 39c:	96 95       	lsr	r25
 39e:	87 95       	ror	r24
 3a0:	97 f9       	bld	r25, 7
 3a2:	08 95       	ret

000003a4 <__fp_split3>:
 3a4:	57 fd       	sbrc	r21, 7
 3a6:	90 58       	subi	r25, 0x80	; 128
 3a8:	44 0f       	add	r20, r20
 3aa:	55 1f       	adc	r21, r21
 3ac:	59 f0       	breq	.+22     	; 0x3c4 <__fp_splitA+0x10>
 3ae:	5f 3f       	cpi	r21, 0xFF	; 255
 3b0:	71 f0       	breq	.+28     	; 0x3ce <__fp_splitA+0x1a>
 3b2:	47 95       	ror	r20

000003b4 <__fp_splitA>:
 3b4:	88 0f       	add	r24, r24
 3b6:	97 fb       	bst	r25, 7
 3b8:	99 1f       	adc	r25, r25
 3ba:	61 f0       	breq	.+24     	; 0x3d4 <__fp_splitA+0x20>
 3bc:	9f 3f       	cpi	r25, 0xFF	; 255
 3be:	79 f0       	breq	.+30     	; 0x3de <__fp_splitA+0x2a>
 3c0:	87 95       	ror	r24
 3c2:	08 95       	ret
 3c4:	12 16       	cp	r1, r18
 3c6:	13 06       	cpc	r1, r19
 3c8:	14 06       	cpc	r1, r20
 3ca:	55 1f       	adc	r21, r21
 3cc:	f2 cf       	rjmp	.-28     	; 0x3b2 <__fp_split3+0xe>
 3ce:	46 95       	lsr	r20
 3d0:	f1 df       	rcall	.-30     	; 0x3b4 <__fp_splitA>
 3d2:	08 c0       	rjmp	.+16     	; 0x3e4 <__fp_splitA+0x30>
 3d4:	16 16       	cp	r1, r22
 3d6:	17 06       	cpc	r1, r23
 3d8:	18 06       	cpc	r1, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	f1 cf       	rjmp	.-30     	; 0x3c0 <__fp_splitA+0xc>
 3de:	86 95       	lsr	r24
 3e0:	71 05       	cpc	r23, r1
 3e2:	61 05       	cpc	r22, r1
 3e4:	08 94       	sec
 3e6:	08 95       	ret

000003e8 <__fp_zero>:
 3e8:	e8 94       	clt

000003ea <__fp_szero>:
 3ea:	bb 27       	eor	r27, r27
 3ec:	66 27       	eor	r22, r22
 3ee:	77 27       	eor	r23, r23
 3f0:	cb 01       	movw	r24, r22
 3f2:	97 f9       	bld	r25, 7
 3f4:	08 95       	ret

000003f6 <__mulsf3>:
 3f6:	0e 94 0e 02 	call	0x41c	; 0x41c <__mulsf3x>
 3fa:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_round>
 3fe:	0e 94 71 02 	call	0x4e2	; 0x4e2 <__fp_pscA>
 402:	38 f0       	brcs	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__fp_pscB>
 408:	20 f0       	brcs	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	95 23       	and	r25, r21
 40c:	11 f0       	breq	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__fp_inf>
 412:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__fp_nan>
 416:	11 24       	eor	r1, r1
 418:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_szero>

0000041c <__mulsf3x>:
 41c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <__fp_split3>
 420:	70 f3       	brcs	.-36     	; 0x3fe <__mulsf3+0x8>

00000422 <__mulsf3_pse>:
 422:	95 9f       	mul	r25, r21
 424:	c1 f3       	breq	.-16     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 426:	95 0f       	add	r25, r21
 428:	50 e0       	ldi	r21, 0x00	; 0
 42a:	55 1f       	adc	r21, r21
 42c:	62 9f       	mul	r22, r18
 42e:	f0 01       	movw	r30, r0
 430:	72 9f       	mul	r23, r18
 432:	bb 27       	eor	r27, r27
 434:	f0 0d       	add	r31, r0
 436:	b1 1d       	adc	r27, r1
 438:	63 9f       	mul	r22, r19
 43a:	aa 27       	eor	r26, r26
 43c:	f0 0d       	add	r31, r0
 43e:	b1 1d       	adc	r27, r1
 440:	aa 1f       	adc	r26, r26
 442:	64 9f       	mul	r22, r20
 444:	66 27       	eor	r22, r22
 446:	b0 0d       	add	r27, r0
 448:	a1 1d       	adc	r26, r1
 44a:	66 1f       	adc	r22, r22
 44c:	82 9f       	mul	r24, r18
 44e:	22 27       	eor	r18, r18
 450:	b0 0d       	add	r27, r0
 452:	a1 1d       	adc	r26, r1
 454:	62 1f       	adc	r22, r18
 456:	73 9f       	mul	r23, r19
 458:	b0 0d       	add	r27, r0
 45a:	a1 1d       	adc	r26, r1
 45c:	62 1f       	adc	r22, r18
 45e:	83 9f       	mul	r24, r19
 460:	a0 0d       	add	r26, r0
 462:	61 1d       	adc	r22, r1
 464:	22 1f       	adc	r18, r18
 466:	74 9f       	mul	r23, r20
 468:	33 27       	eor	r19, r19
 46a:	a0 0d       	add	r26, r0
 46c:	61 1d       	adc	r22, r1
 46e:	23 1f       	adc	r18, r19
 470:	84 9f       	mul	r24, r20
 472:	60 0d       	add	r22, r0
 474:	21 1d       	adc	r18, r1
 476:	82 2f       	mov	r24, r18
 478:	76 2f       	mov	r23, r22
 47a:	6a 2f       	mov	r22, r26
 47c:	11 24       	eor	r1, r1
 47e:	9f 57       	subi	r25, 0x7F	; 127
 480:	50 40       	sbci	r21, 0x00	; 0
 482:	9a f0       	brmi	.+38     	; 0x4aa <__mulsf3_pse+0x88>
 484:	f1 f0       	breq	.+60     	; 0x4c2 <__mulsf3_pse+0xa0>
 486:	88 23       	and	r24, r24
 488:	4a f0       	brmi	.+18     	; 0x49c <__mulsf3_pse+0x7a>
 48a:	ee 0f       	add	r30, r30
 48c:	ff 1f       	adc	r31, r31
 48e:	bb 1f       	adc	r27, r27
 490:	66 1f       	adc	r22, r22
 492:	77 1f       	adc	r23, r23
 494:	88 1f       	adc	r24, r24
 496:	91 50       	subi	r25, 0x01	; 1
 498:	50 40       	sbci	r21, 0x00	; 0
 49a:	a9 f7       	brne	.-22     	; 0x486 <__mulsf3_pse+0x64>
 49c:	9e 3f       	cpi	r25, 0xFE	; 254
 49e:	51 05       	cpc	r21, r1
 4a0:	80 f0       	brcs	.+32     	; 0x4c2 <__mulsf3_pse+0xa0>
 4a2:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <__fp_inf>
 4a6:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_szero>
 4aa:	5f 3f       	cpi	r21, 0xFF	; 255
 4ac:	e4 f3       	brlt	.-8      	; 0x4a6 <__mulsf3_pse+0x84>
 4ae:	98 3e       	cpi	r25, 0xE8	; 232
 4b0:	d4 f3       	brlt	.-12     	; 0x4a6 <__mulsf3_pse+0x84>
 4b2:	86 95       	lsr	r24
 4b4:	77 95       	ror	r23
 4b6:	67 95       	ror	r22
 4b8:	b7 95       	ror	r27
 4ba:	f7 95       	ror	r31
 4bc:	e7 95       	ror	r30
 4be:	9f 5f       	subi	r25, 0xFF	; 255
 4c0:	c1 f7       	brne	.-16     	; 0x4b2 <__mulsf3_pse+0x90>
 4c2:	fe 2b       	or	r31, r30
 4c4:	88 0f       	add	r24, r24
 4c6:	91 1d       	adc	r25, r1
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	97 f9       	bld	r25, 7
 4ce:	08 95       	ret

000004d0 <__fp_inf>:
 4d0:	97 f9       	bld	r25, 7
 4d2:	9f 67       	ori	r25, 0x7F	; 127
 4d4:	80 e8       	ldi	r24, 0x80	; 128
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	60 e0       	ldi	r22, 0x00	; 0
 4da:	08 95       	ret

000004dc <__fp_nan>:
 4dc:	9f ef       	ldi	r25, 0xFF	; 255
 4de:	80 ec       	ldi	r24, 0xC0	; 192
 4e0:	08 95       	ret

000004e2 <__fp_pscA>:
 4e2:	00 24       	eor	r0, r0
 4e4:	0a 94       	dec	r0
 4e6:	16 16       	cp	r1, r22
 4e8:	17 06       	cpc	r1, r23
 4ea:	18 06       	cpc	r1, r24
 4ec:	09 06       	cpc	r0, r25
 4ee:	08 95       	ret

000004f0 <__fp_pscB>:
 4f0:	00 24       	eor	r0, r0
 4f2:	0a 94       	dec	r0
 4f4:	12 16       	cp	r1, r18
 4f6:	13 06       	cpc	r1, r19
 4f8:	14 06       	cpc	r1, r20
 4fa:	05 06       	cpc	r0, r21
 4fc:	08 95       	ret

000004fe <__fp_round>:
 4fe:	09 2e       	mov	r0, r25
 500:	03 94       	inc	r0
 502:	00 0c       	add	r0, r0
 504:	11 f4       	brne	.+4      	; 0x50a <__fp_round+0xc>
 506:	88 23       	and	r24, r24
 508:	52 f0       	brmi	.+20     	; 0x51e <__fp_round+0x20>
 50a:	bb 0f       	add	r27, r27
 50c:	40 f4       	brcc	.+16     	; 0x51e <__fp_round+0x20>
 50e:	bf 2b       	or	r27, r31
 510:	11 f4       	brne	.+4      	; 0x516 <__fp_round+0x18>
 512:	60 ff       	sbrs	r22, 0
 514:	04 c0       	rjmp	.+8      	; 0x51e <__fp_round+0x20>
 516:	6f 5f       	subi	r22, 0xFF	; 255
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	8f 4f       	sbci	r24, 0xFF	; 255
 51c:	9f 4f       	sbci	r25, 0xFF	; 255
 51e:	08 95       	ret

00000520 <__divmodhi4>:
 520:	97 fb       	bst	r25, 7
 522:	07 2e       	mov	r0, r23
 524:	16 f4       	brtc	.+4      	; 0x52a <__divmodhi4+0xa>
 526:	00 94       	com	r0
 528:	07 d0       	rcall	.+14     	; 0x538 <__divmodhi4_neg1>
 52a:	77 fd       	sbrc	r23, 7
 52c:	09 d0       	rcall	.+18     	; 0x540 <__divmodhi4_neg2>
 52e:	0e 94 a4 02 	call	0x548	; 0x548 <__udivmodhi4>
 532:	07 fc       	sbrc	r0, 7
 534:	05 d0       	rcall	.+10     	; 0x540 <__divmodhi4_neg2>
 536:	3e f4       	brtc	.+14     	; 0x546 <__divmodhi4_exit>

00000538 <__divmodhi4_neg1>:
 538:	90 95       	com	r25
 53a:	81 95       	neg	r24
 53c:	9f 4f       	sbci	r25, 0xFF	; 255
 53e:	08 95       	ret

00000540 <__divmodhi4_neg2>:
 540:	70 95       	com	r23
 542:	61 95       	neg	r22
 544:	7f 4f       	sbci	r23, 0xFF	; 255

00000546 <__divmodhi4_exit>:
 546:	08 95       	ret

00000548 <__udivmodhi4>:
 548:	aa 1b       	sub	r26, r26
 54a:	bb 1b       	sub	r27, r27
 54c:	51 e1       	ldi	r21, 0x11	; 17
 54e:	07 c0       	rjmp	.+14     	; 0x55e <__udivmodhi4_ep>

00000550 <__udivmodhi4_loop>:
 550:	aa 1f       	adc	r26, r26
 552:	bb 1f       	adc	r27, r27
 554:	a6 17       	cp	r26, r22
 556:	b7 07       	cpc	r27, r23
 558:	10 f0       	brcs	.+4      	; 0x55e <__udivmodhi4_ep>
 55a:	a6 1b       	sub	r26, r22
 55c:	b7 0b       	sbc	r27, r23

0000055e <__udivmodhi4_ep>:
 55e:	88 1f       	adc	r24, r24
 560:	99 1f       	adc	r25, r25
 562:	5a 95       	dec	r21
 564:	a9 f7       	brne	.-22     	; 0x550 <__udivmodhi4_loop>
 566:	80 95       	com	r24
 568:	90 95       	com	r25
 56a:	bc 01       	movw	r22, r24
 56c:	cd 01       	movw	r24, r26
 56e:	08 95       	ret

00000570 <snprintf>:
 570:	ae e0       	ldi	r26, 0x0E	; 14
 572:	b0 e0       	ldi	r27, 0x00	; 0
 574:	ee eb       	ldi	r30, 0xBE	; 190
 576:	f2 e0       	ldi	r31, 0x02	; 2
 578:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__prologue_saves__+0x1c>
 57c:	0d 89       	ldd	r16, Y+21	; 0x15
 57e:	1e 89       	ldd	r17, Y+22	; 0x16
 580:	8f 89       	ldd	r24, Y+23	; 0x17
 582:	98 8d       	ldd	r25, Y+24	; 0x18
 584:	26 e0       	ldi	r18, 0x06	; 6
 586:	2c 83       	std	Y+4, r18	; 0x04
 588:	1a 83       	std	Y+2, r17	; 0x02
 58a:	09 83       	std	Y+1, r16	; 0x01
 58c:	97 ff       	sbrs	r25, 7
 58e:	02 c0       	rjmp	.+4      	; 0x594 <snprintf+0x24>
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	90 e8       	ldi	r25, 0x80	; 128
 594:	01 97       	sbiw	r24, 0x01	; 1
 596:	9e 83       	std	Y+6, r25	; 0x06
 598:	8d 83       	std	Y+5, r24	; 0x05
 59a:	ae 01       	movw	r20, r28
 59c:	45 5e       	subi	r20, 0xE5	; 229
 59e:	5f 4f       	sbci	r21, 0xFF	; 255
 5a0:	69 8d       	ldd	r22, Y+25	; 0x19
 5a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
 5a4:	ce 01       	movw	r24, r28
 5a6:	01 96       	adiw	r24, 0x01	; 1
 5a8:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <vfprintf>
 5ac:	4d 81       	ldd	r20, Y+5	; 0x05
 5ae:	5e 81       	ldd	r21, Y+6	; 0x06
 5b0:	57 fd       	sbrc	r21, 7
 5b2:	0a c0       	rjmp	.+20     	; 0x5c8 <snprintf+0x58>
 5b4:	2f 81       	ldd	r18, Y+7	; 0x07
 5b6:	38 85       	ldd	r19, Y+8	; 0x08
 5b8:	42 17       	cp	r20, r18
 5ba:	53 07       	cpc	r21, r19
 5bc:	0c f4       	brge	.+2      	; 0x5c0 <snprintf+0x50>
 5be:	9a 01       	movw	r18, r20
 5c0:	f8 01       	movw	r30, r16
 5c2:	e2 0f       	add	r30, r18
 5c4:	f3 1f       	adc	r31, r19
 5c6:	10 82       	st	Z, r1
 5c8:	2e 96       	adiw	r28, 0x0e	; 14
 5ca:	e4 e0       	ldi	r30, 0x04	; 4
 5cc:	0c 94 a3 05 	jmp	0xb46	; 0xb46 <__epilogue_restores__+0x1c>

000005d0 <vfprintf>:
 5d0:	ab e0       	ldi	r26, 0x0B	; 11
 5d2:	b0 e0       	ldi	r27, 0x00	; 0
 5d4:	ee ee       	ldi	r30, 0xEE	; 238
 5d6:	f2 e0       	ldi	r31, 0x02	; 2
 5d8:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__prologue_saves__>
 5dc:	6c 01       	movw	r12, r24
 5de:	7b 01       	movw	r14, r22
 5e0:	8a 01       	movw	r16, r20
 5e2:	fc 01       	movw	r30, r24
 5e4:	17 82       	std	Z+7, r1	; 0x07
 5e6:	16 82       	std	Z+6, r1	; 0x06
 5e8:	83 81       	ldd	r24, Z+3	; 0x03
 5ea:	81 ff       	sbrs	r24, 1
 5ec:	cc c1       	rjmp	.+920    	; 0x986 <__stack+0x87>
 5ee:	ce 01       	movw	r24, r28
 5f0:	01 96       	adiw	r24, 0x01	; 1
 5f2:	3c 01       	movw	r6, r24
 5f4:	f6 01       	movw	r30, r12
 5f6:	93 81       	ldd	r25, Z+3	; 0x03
 5f8:	f7 01       	movw	r30, r14
 5fa:	93 fd       	sbrc	r25, 3
 5fc:	85 91       	lpm	r24, Z+
 5fe:	93 ff       	sbrs	r25, 3
 600:	81 91       	ld	r24, Z+
 602:	7f 01       	movw	r14, r30
 604:	88 23       	and	r24, r24
 606:	09 f4       	brne	.+2      	; 0x60a <vfprintf+0x3a>
 608:	ba c1       	rjmp	.+884    	; 0x97e <__stack+0x7f>
 60a:	85 32       	cpi	r24, 0x25	; 37
 60c:	39 f4       	brne	.+14     	; 0x61c <vfprintf+0x4c>
 60e:	93 fd       	sbrc	r25, 3
 610:	85 91       	lpm	r24, Z+
 612:	93 ff       	sbrs	r25, 3
 614:	81 91       	ld	r24, Z+
 616:	7f 01       	movw	r14, r30
 618:	85 32       	cpi	r24, 0x25	; 37
 61a:	29 f4       	brne	.+10     	; 0x626 <vfprintf+0x56>
 61c:	b6 01       	movw	r22, r12
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 624:	e7 cf       	rjmp	.-50     	; 0x5f4 <vfprintf+0x24>
 626:	91 2c       	mov	r9, r1
 628:	21 2c       	mov	r2, r1
 62a:	31 2c       	mov	r3, r1
 62c:	ff e1       	ldi	r31, 0x1F	; 31
 62e:	f3 15       	cp	r31, r3
 630:	d8 f0       	brcs	.+54     	; 0x668 <vfprintf+0x98>
 632:	8b 32       	cpi	r24, 0x2B	; 43
 634:	79 f0       	breq	.+30     	; 0x654 <vfprintf+0x84>
 636:	38 f4       	brcc	.+14     	; 0x646 <vfprintf+0x76>
 638:	80 32       	cpi	r24, 0x20	; 32
 63a:	79 f0       	breq	.+30     	; 0x65a <vfprintf+0x8a>
 63c:	83 32       	cpi	r24, 0x23	; 35
 63e:	a1 f4       	brne	.+40     	; 0x668 <vfprintf+0x98>
 640:	23 2d       	mov	r18, r3
 642:	20 61       	ori	r18, 0x10	; 16
 644:	1d c0       	rjmp	.+58     	; 0x680 <vfprintf+0xb0>
 646:	8d 32       	cpi	r24, 0x2D	; 45
 648:	61 f0       	breq	.+24     	; 0x662 <vfprintf+0x92>
 64a:	80 33       	cpi	r24, 0x30	; 48
 64c:	69 f4       	brne	.+26     	; 0x668 <vfprintf+0x98>
 64e:	23 2d       	mov	r18, r3
 650:	21 60       	ori	r18, 0x01	; 1
 652:	16 c0       	rjmp	.+44     	; 0x680 <vfprintf+0xb0>
 654:	83 2d       	mov	r24, r3
 656:	82 60       	ori	r24, 0x02	; 2
 658:	38 2e       	mov	r3, r24
 65a:	e3 2d       	mov	r30, r3
 65c:	e4 60       	ori	r30, 0x04	; 4
 65e:	3e 2e       	mov	r3, r30
 660:	2a c0       	rjmp	.+84     	; 0x6b6 <vfprintf+0xe6>
 662:	f3 2d       	mov	r31, r3
 664:	f8 60       	ori	r31, 0x08	; 8
 666:	1d c0       	rjmp	.+58     	; 0x6a2 <vfprintf+0xd2>
 668:	37 fc       	sbrc	r3, 7
 66a:	2d c0       	rjmp	.+90     	; 0x6c6 <vfprintf+0xf6>
 66c:	20 ed       	ldi	r18, 0xD0	; 208
 66e:	28 0f       	add	r18, r24
 670:	2a 30       	cpi	r18, 0x0A	; 10
 672:	40 f0       	brcs	.+16     	; 0x684 <vfprintf+0xb4>
 674:	8e 32       	cpi	r24, 0x2E	; 46
 676:	b9 f4       	brne	.+46     	; 0x6a6 <vfprintf+0xd6>
 678:	36 fc       	sbrc	r3, 6
 67a:	81 c1       	rjmp	.+770    	; 0x97e <__stack+0x7f>
 67c:	23 2d       	mov	r18, r3
 67e:	20 64       	ori	r18, 0x40	; 64
 680:	32 2e       	mov	r3, r18
 682:	19 c0       	rjmp	.+50     	; 0x6b6 <vfprintf+0xe6>
 684:	36 fe       	sbrs	r3, 6
 686:	06 c0       	rjmp	.+12     	; 0x694 <vfprintf+0xc4>
 688:	8a e0       	ldi	r24, 0x0A	; 10
 68a:	98 9e       	mul	r9, r24
 68c:	20 0d       	add	r18, r0
 68e:	11 24       	eor	r1, r1
 690:	92 2e       	mov	r9, r18
 692:	11 c0       	rjmp	.+34     	; 0x6b6 <vfprintf+0xe6>
 694:	ea e0       	ldi	r30, 0x0A	; 10
 696:	2e 9e       	mul	r2, r30
 698:	20 0d       	add	r18, r0
 69a:	11 24       	eor	r1, r1
 69c:	22 2e       	mov	r2, r18
 69e:	f3 2d       	mov	r31, r3
 6a0:	f0 62       	ori	r31, 0x20	; 32
 6a2:	3f 2e       	mov	r3, r31
 6a4:	08 c0       	rjmp	.+16     	; 0x6b6 <vfprintf+0xe6>
 6a6:	8c 36       	cpi	r24, 0x6C	; 108
 6a8:	21 f4       	brne	.+8      	; 0x6b2 <vfprintf+0xe2>
 6aa:	83 2d       	mov	r24, r3
 6ac:	80 68       	ori	r24, 0x80	; 128
 6ae:	38 2e       	mov	r3, r24
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <vfprintf+0xe6>
 6b2:	88 36       	cpi	r24, 0x68	; 104
 6b4:	41 f4       	brne	.+16     	; 0x6c6 <vfprintf+0xf6>
 6b6:	f7 01       	movw	r30, r14
 6b8:	93 fd       	sbrc	r25, 3
 6ba:	85 91       	lpm	r24, Z+
 6bc:	93 ff       	sbrs	r25, 3
 6be:	81 91       	ld	r24, Z+
 6c0:	7f 01       	movw	r14, r30
 6c2:	81 11       	cpse	r24, r1
 6c4:	b3 cf       	rjmp	.-154    	; 0x62c <vfprintf+0x5c>
 6c6:	98 2f       	mov	r25, r24
 6c8:	9f 7d       	andi	r25, 0xDF	; 223
 6ca:	95 54       	subi	r25, 0x45	; 69
 6cc:	93 30       	cpi	r25, 0x03	; 3
 6ce:	28 f4       	brcc	.+10     	; 0x6da <vfprintf+0x10a>
 6d0:	0c 5f       	subi	r16, 0xFC	; 252
 6d2:	1f 4f       	sbci	r17, 0xFF	; 255
 6d4:	9f e3       	ldi	r25, 0x3F	; 63
 6d6:	99 83       	std	Y+1, r25	; 0x01
 6d8:	0d c0       	rjmp	.+26     	; 0x6f4 <vfprintf+0x124>
 6da:	83 36       	cpi	r24, 0x63	; 99
 6dc:	31 f0       	breq	.+12     	; 0x6ea <vfprintf+0x11a>
 6de:	83 37       	cpi	r24, 0x73	; 115
 6e0:	71 f0       	breq	.+28     	; 0x6fe <vfprintf+0x12e>
 6e2:	83 35       	cpi	r24, 0x53	; 83
 6e4:	09 f0       	breq	.+2      	; 0x6e8 <vfprintf+0x118>
 6e6:	59 c0       	rjmp	.+178    	; 0x79a <vfprintf+0x1ca>
 6e8:	21 c0       	rjmp	.+66     	; 0x72c <vfprintf+0x15c>
 6ea:	f8 01       	movw	r30, r16
 6ec:	80 81       	ld	r24, Z
 6ee:	89 83       	std	Y+1, r24	; 0x01
 6f0:	0e 5f       	subi	r16, 0xFE	; 254
 6f2:	1f 4f       	sbci	r17, 0xFF	; 255
 6f4:	88 24       	eor	r8, r8
 6f6:	83 94       	inc	r8
 6f8:	91 2c       	mov	r9, r1
 6fa:	53 01       	movw	r10, r6
 6fc:	13 c0       	rjmp	.+38     	; 0x724 <vfprintf+0x154>
 6fe:	28 01       	movw	r4, r16
 700:	f2 e0       	ldi	r31, 0x02	; 2
 702:	4f 0e       	add	r4, r31
 704:	51 1c       	adc	r5, r1
 706:	f8 01       	movw	r30, r16
 708:	a0 80       	ld	r10, Z
 70a:	b1 80       	ldd	r11, Z+1	; 0x01
 70c:	36 fe       	sbrs	r3, 6
 70e:	03 c0       	rjmp	.+6      	; 0x716 <vfprintf+0x146>
 710:	69 2d       	mov	r22, r9
 712:	70 e0       	ldi	r23, 0x00	; 0
 714:	02 c0       	rjmp	.+4      	; 0x71a <vfprintf+0x14a>
 716:	6f ef       	ldi	r22, 0xFF	; 255
 718:	7f ef       	ldi	r23, 0xFF	; 255
 71a:	c5 01       	movw	r24, r10
 71c:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <strnlen>
 720:	4c 01       	movw	r8, r24
 722:	82 01       	movw	r16, r4
 724:	f3 2d       	mov	r31, r3
 726:	ff 77       	andi	r31, 0x7F	; 127
 728:	3f 2e       	mov	r3, r31
 72a:	16 c0       	rjmp	.+44     	; 0x758 <vfprintf+0x188>
 72c:	28 01       	movw	r4, r16
 72e:	22 e0       	ldi	r18, 0x02	; 2
 730:	42 0e       	add	r4, r18
 732:	51 1c       	adc	r5, r1
 734:	f8 01       	movw	r30, r16
 736:	a0 80       	ld	r10, Z
 738:	b1 80       	ldd	r11, Z+1	; 0x01
 73a:	36 fe       	sbrs	r3, 6
 73c:	03 c0       	rjmp	.+6      	; 0x744 <vfprintf+0x174>
 73e:	69 2d       	mov	r22, r9
 740:	70 e0       	ldi	r23, 0x00	; 0
 742:	02 c0       	rjmp	.+4      	; 0x748 <vfprintf+0x178>
 744:	6f ef       	ldi	r22, 0xFF	; 255
 746:	7f ef       	ldi	r23, 0xFF	; 255
 748:	c5 01       	movw	r24, r10
 74a:	0e 94 c9 04 	call	0x992	; 0x992 <strnlen_P>
 74e:	4c 01       	movw	r8, r24
 750:	f3 2d       	mov	r31, r3
 752:	f0 68       	ori	r31, 0x80	; 128
 754:	3f 2e       	mov	r3, r31
 756:	82 01       	movw	r16, r4
 758:	33 fc       	sbrc	r3, 3
 75a:	1b c0       	rjmp	.+54     	; 0x792 <vfprintf+0x1c2>
 75c:	82 2d       	mov	r24, r2
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	88 16       	cp	r8, r24
 762:	99 06       	cpc	r9, r25
 764:	b0 f4       	brcc	.+44     	; 0x792 <vfprintf+0x1c2>
 766:	b6 01       	movw	r22, r12
 768:	80 e2       	ldi	r24, 0x20	; 32
 76a:	90 e0       	ldi	r25, 0x00	; 0
 76c:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 770:	2a 94       	dec	r2
 772:	f4 cf       	rjmp	.-24     	; 0x75c <vfprintf+0x18c>
 774:	f5 01       	movw	r30, r10
 776:	37 fc       	sbrc	r3, 7
 778:	85 91       	lpm	r24, Z+
 77a:	37 fe       	sbrs	r3, 7
 77c:	81 91       	ld	r24, Z+
 77e:	5f 01       	movw	r10, r30
 780:	b6 01       	movw	r22, r12
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 788:	21 10       	cpse	r2, r1
 78a:	2a 94       	dec	r2
 78c:	21 e0       	ldi	r18, 0x01	; 1
 78e:	82 1a       	sub	r8, r18
 790:	91 08       	sbc	r9, r1
 792:	81 14       	cp	r8, r1
 794:	91 04       	cpc	r9, r1
 796:	71 f7       	brne	.-36     	; 0x774 <vfprintf+0x1a4>
 798:	e8 c0       	rjmp	.+464    	; 0x96a <__stack+0x6b>
 79a:	84 36       	cpi	r24, 0x64	; 100
 79c:	11 f0       	breq	.+4      	; 0x7a2 <vfprintf+0x1d2>
 79e:	89 36       	cpi	r24, 0x69	; 105
 7a0:	41 f5       	brne	.+80     	; 0x7f2 <vfprintf+0x222>
 7a2:	f8 01       	movw	r30, r16
 7a4:	37 fe       	sbrs	r3, 7
 7a6:	07 c0       	rjmp	.+14     	; 0x7b6 <vfprintf+0x1e6>
 7a8:	60 81       	ld	r22, Z
 7aa:	71 81       	ldd	r23, Z+1	; 0x01
 7ac:	82 81       	ldd	r24, Z+2	; 0x02
 7ae:	93 81       	ldd	r25, Z+3	; 0x03
 7b0:	0c 5f       	subi	r16, 0xFC	; 252
 7b2:	1f 4f       	sbci	r17, 0xFF	; 255
 7b4:	08 c0       	rjmp	.+16     	; 0x7c6 <vfprintf+0x1f6>
 7b6:	60 81       	ld	r22, Z
 7b8:	71 81       	ldd	r23, Z+1	; 0x01
 7ba:	07 2e       	mov	r0, r23
 7bc:	00 0c       	add	r0, r0
 7be:	88 0b       	sbc	r24, r24
 7c0:	99 0b       	sbc	r25, r25
 7c2:	0e 5f       	subi	r16, 0xFE	; 254
 7c4:	1f 4f       	sbci	r17, 0xFF	; 255
 7c6:	f3 2d       	mov	r31, r3
 7c8:	ff 76       	andi	r31, 0x6F	; 111
 7ca:	3f 2e       	mov	r3, r31
 7cc:	97 ff       	sbrs	r25, 7
 7ce:	09 c0       	rjmp	.+18     	; 0x7e2 <vfprintf+0x212>
 7d0:	90 95       	com	r25
 7d2:	80 95       	com	r24
 7d4:	70 95       	com	r23
 7d6:	61 95       	neg	r22
 7d8:	7f 4f       	sbci	r23, 0xFF	; 255
 7da:	8f 4f       	sbci	r24, 0xFF	; 255
 7dc:	9f 4f       	sbci	r25, 0xFF	; 255
 7de:	f0 68       	ori	r31, 0x80	; 128
 7e0:	3f 2e       	mov	r3, r31
 7e2:	2a e0       	ldi	r18, 0x0A	; 10
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	a3 01       	movw	r20, r6
 7e8:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 7ec:	88 2e       	mov	r8, r24
 7ee:	86 18       	sub	r8, r6
 7f0:	45 c0       	rjmp	.+138    	; 0x87c <vfprintf+0x2ac>
 7f2:	85 37       	cpi	r24, 0x75	; 117
 7f4:	31 f4       	brne	.+12     	; 0x802 <vfprintf+0x232>
 7f6:	23 2d       	mov	r18, r3
 7f8:	2f 7e       	andi	r18, 0xEF	; 239
 7fa:	b2 2e       	mov	r11, r18
 7fc:	2a e0       	ldi	r18, 0x0A	; 10
 7fe:	30 e0       	ldi	r19, 0x00	; 0
 800:	25 c0       	rjmp	.+74     	; 0x84c <vfprintf+0x27c>
 802:	93 2d       	mov	r25, r3
 804:	99 7f       	andi	r25, 0xF9	; 249
 806:	b9 2e       	mov	r11, r25
 808:	8f 36       	cpi	r24, 0x6F	; 111
 80a:	c1 f0       	breq	.+48     	; 0x83c <vfprintf+0x26c>
 80c:	18 f4       	brcc	.+6      	; 0x814 <vfprintf+0x244>
 80e:	88 35       	cpi	r24, 0x58	; 88
 810:	79 f0       	breq	.+30     	; 0x830 <vfprintf+0x260>
 812:	b5 c0       	rjmp	.+362    	; 0x97e <__stack+0x7f>
 814:	80 37       	cpi	r24, 0x70	; 112
 816:	19 f0       	breq	.+6      	; 0x81e <vfprintf+0x24e>
 818:	88 37       	cpi	r24, 0x78	; 120
 81a:	21 f0       	breq	.+8      	; 0x824 <vfprintf+0x254>
 81c:	b0 c0       	rjmp	.+352    	; 0x97e <__stack+0x7f>
 81e:	e9 2f       	mov	r30, r25
 820:	e0 61       	ori	r30, 0x10	; 16
 822:	be 2e       	mov	r11, r30
 824:	b4 fe       	sbrs	r11, 4
 826:	0d c0       	rjmp	.+26     	; 0x842 <vfprintf+0x272>
 828:	fb 2d       	mov	r31, r11
 82a:	f4 60       	ori	r31, 0x04	; 4
 82c:	bf 2e       	mov	r11, r31
 82e:	09 c0       	rjmp	.+18     	; 0x842 <vfprintf+0x272>
 830:	34 fe       	sbrs	r3, 4
 832:	0a c0       	rjmp	.+20     	; 0x848 <vfprintf+0x278>
 834:	29 2f       	mov	r18, r25
 836:	26 60       	ori	r18, 0x06	; 6
 838:	b2 2e       	mov	r11, r18
 83a:	06 c0       	rjmp	.+12     	; 0x848 <vfprintf+0x278>
 83c:	28 e0       	ldi	r18, 0x08	; 8
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	05 c0       	rjmp	.+10     	; 0x84c <vfprintf+0x27c>
 842:	20 e1       	ldi	r18, 0x10	; 16
 844:	30 e0       	ldi	r19, 0x00	; 0
 846:	02 c0       	rjmp	.+4      	; 0x84c <vfprintf+0x27c>
 848:	20 e1       	ldi	r18, 0x10	; 16
 84a:	32 e0       	ldi	r19, 0x02	; 2
 84c:	f8 01       	movw	r30, r16
 84e:	b7 fe       	sbrs	r11, 7
 850:	07 c0       	rjmp	.+14     	; 0x860 <vfprintf+0x290>
 852:	60 81       	ld	r22, Z
 854:	71 81       	ldd	r23, Z+1	; 0x01
 856:	82 81       	ldd	r24, Z+2	; 0x02
 858:	93 81       	ldd	r25, Z+3	; 0x03
 85a:	0c 5f       	subi	r16, 0xFC	; 252
 85c:	1f 4f       	sbci	r17, 0xFF	; 255
 85e:	06 c0       	rjmp	.+12     	; 0x86c <vfprintf+0x29c>
 860:	60 81       	ld	r22, Z
 862:	71 81       	ldd	r23, Z+1	; 0x01
 864:	80 e0       	ldi	r24, 0x00	; 0
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 5f       	subi	r16, 0xFE	; 254
 86a:	1f 4f       	sbci	r17, 0xFF	; 255
 86c:	a3 01       	movw	r20, r6
 86e:	0e 94 1b 05 	call	0xa36	; 0xa36 <__ultoa_invert>
 872:	88 2e       	mov	r8, r24
 874:	86 18       	sub	r8, r6
 876:	fb 2d       	mov	r31, r11
 878:	ff 77       	andi	r31, 0x7F	; 127
 87a:	3f 2e       	mov	r3, r31
 87c:	36 fe       	sbrs	r3, 6
 87e:	0d c0       	rjmp	.+26     	; 0x89a <vfprintf+0x2ca>
 880:	23 2d       	mov	r18, r3
 882:	2e 7f       	andi	r18, 0xFE	; 254
 884:	a2 2e       	mov	r10, r18
 886:	89 14       	cp	r8, r9
 888:	58 f4       	brcc	.+22     	; 0x8a0 <vfprintf+0x2d0>
 88a:	34 fe       	sbrs	r3, 4
 88c:	0b c0       	rjmp	.+22     	; 0x8a4 <vfprintf+0x2d4>
 88e:	32 fc       	sbrc	r3, 2
 890:	09 c0       	rjmp	.+18     	; 0x8a4 <vfprintf+0x2d4>
 892:	83 2d       	mov	r24, r3
 894:	8e 7e       	andi	r24, 0xEE	; 238
 896:	a8 2e       	mov	r10, r24
 898:	05 c0       	rjmp	.+10     	; 0x8a4 <vfprintf+0x2d4>
 89a:	b8 2c       	mov	r11, r8
 89c:	a3 2c       	mov	r10, r3
 89e:	03 c0       	rjmp	.+6      	; 0x8a6 <vfprintf+0x2d6>
 8a0:	b8 2c       	mov	r11, r8
 8a2:	01 c0       	rjmp	.+2      	; 0x8a6 <vfprintf+0x2d6>
 8a4:	b9 2c       	mov	r11, r9
 8a6:	a4 fe       	sbrs	r10, 4
 8a8:	0f c0       	rjmp	.+30     	; 0x8c8 <vfprintf+0x2f8>
 8aa:	fe 01       	movw	r30, r28
 8ac:	e8 0d       	add	r30, r8
 8ae:	f1 1d       	adc	r31, r1
 8b0:	80 81       	ld	r24, Z
 8b2:	80 33       	cpi	r24, 0x30	; 48
 8b4:	21 f4       	brne	.+8      	; 0x8be <vfprintf+0x2ee>
 8b6:	9a 2d       	mov	r25, r10
 8b8:	99 7e       	andi	r25, 0xE9	; 233
 8ba:	a9 2e       	mov	r10, r25
 8bc:	09 c0       	rjmp	.+18     	; 0x8d0 <vfprintf+0x300>
 8be:	a2 fe       	sbrs	r10, 2
 8c0:	06 c0       	rjmp	.+12     	; 0x8ce <vfprintf+0x2fe>
 8c2:	b3 94       	inc	r11
 8c4:	b3 94       	inc	r11
 8c6:	04 c0       	rjmp	.+8      	; 0x8d0 <vfprintf+0x300>
 8c8:	8a 2d       	mov	r24, r10
 8ca:	86 78       	andi	r24, 0x86	; 134
 8cc:	09 f0       	breq	.+2      	; 0x8d0 <vfprintf+0x300>
 8ce:	b3 94       	inc	r11
 8d0:	a3 fc       	sbrc	r10, 3
 8d2:	11 c0       	rjmp	.+34     	; 0x8f6 <vfprintf+0x326>
 8d4:	a0 fe       	sbrs	r10, 0
 8d6:	06 c0       	rjmp	.+12     	; 0x8e4 <vfprintf+0x314>
 8d8:	b2 14       	cp	r11, r2
 8da:	88 f4       	brcc	.+34     	; 0x8fe <vfprintf+0x32e>
 8dc:	28 0c       	add	r2, r8
 8de:	92 2c       	mov	r9, r2
 8e0:	9b 18       	sub	r9, r11
 8e2:	0e c0       	rjmp	.+28     	; 0x900 <__stack+0x1>
 8e4:	b2 14       	cp	r11, r2
 8e6:	60 f4       	brcc	.+24     	; 0x900 <__stack+0x1>
 8e8:	b6 01       	movw	r22, r12
 8ea:	80 e2       	ldi	r24, 0x20	; 32
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 8f2:	b3 94       	inc	r11
 8f4:	f7 cf       	rjmp	.-18     	; 0x8e4 <vfprintf+0x314>
 8f6:	b2 14       	cp	r11, r2
 8f8:	18 f4       	brcc	.+6      	; 0x900 <__stack+0x1>
 8fa:	2b 18       	sub	r2, r11
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0x3>
 8fe:	98 2c       	mov	r9, r8
 900:	21 2c       	mov	r2, r1
 902:	a4 fe       	sbrs	r10, 4
 904:	10 c0       	rjmp	.+32     	; 0x926 <__stack+0x27>
 906:	b6 01       	movw	r22, r12
 908:	80 e3       	ldi	r24, 0x30	; 48
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 910:	a2 fe       	sbrs	r10, 2
 912:	17 c0       	rjmp	.+46     	; 0x942 <__stack+0x43>
 914:	a1 fc       	sbrc	r10, 1
 916:	03 c0       	rjmp	.+6      	; 0x91e <__stack+0x1f>
 918:	88 e7       	ldi	r24, 0x78	; 120
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
 91e:	88 e5       	ldi	r24, 0x58	; 88
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	b6 01       	movw	r22, r12
 924:	0c c0       	rjmp	.+24     	; 0x93e <__stack+0x3f>
 926:	8a 2d       	mov	r24, r10
 928:	86 78       	andi	r24, 0x86	; 134
 92a:	59 f0       	breq	.+22     	; 0x942 <__stack+0x43>
 92c:	a1 fe       	sbrs	r10, 1
 92e:	02 c0       	rjmp	.+4      	; 0x934 <__stack+0x35>
 930:	8b e2       	ldi	r24, 0x2B	; 43
 932:	01 c0       	rjmp	.+2      	; 0x936 <__stack+0x37>
 934:	80 e2       	ldi	r24, 0x20	; 32
 936:	a7 fc       	sbrc	r10, 7
 938:	8d e2       	ldi	r24, 0x2D	; 45
 93a:	b6 01       	movw	r22, r12
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 942:	89 14       	cp	r8, r9
 944:	38 f4       	brcc	.+14     	; 0x954 <__stack+0x55>
 946:	b6 01       	movw	r22, r12
 948:	80 e3       	ldi	r24, 0x30	; 48
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 950:	9a 94       	dec	r9
 952:	f7 cf       	rjmp	.-18     	; 0x942 <__stack+0x43>
 954:	8a 94       	dec	r8
 956:	f3 01       	movw	r30, r6
 958:	e8 0d       	add	r30, r8
 95a:	f1 1d       	adc	r31, r1
 95c:	80 81       	ld	r24, Z
 95e:	b6 01       	movw	r22, r12
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 966:	81 10       	cpse	r8, r1
 968:	f5 cf       	rjmp	.-22     	; 0x954 <__stack+0x55>
 96a:	22 20       	and	r2, r2
 96c:	09 f4       	brne	.+2      	; 0x970 <__stack+0x71>
 96e:	42 ce       	rjmp	.-892    	; 0x5f4 <vfprintf+0x24>
 970:	b6 01       	movw	r22, r12
 972:	80 e2       	ldi	r24, 0x20	; 32
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	0e 94 df 04 	call	0x9be	; 0x9be <fputc>
 97a:	2a 94       	dec	r2
 97c:	f6 cf       	rjmp	.-20     	; 0x96a <__stack+0x6b>
 97e:	f6 01       	movw	r30, r12
 980:	86 81       	ldd	r24, Z+6	; 0x06
 982:	97 81       	ldd	r25, Z+7	; 0x07
 984:	02 c0       	rjmp	.+4      	; 0x98a <__stack+0x8b>
 986:	8f ef       	ldi	r24, 0xFF	; 255
 988:	9f ef       	ldi	r25, 0xFF	; 255
 98a:	2b 96       	adiw	r28, 0x0b	; 11
 98c:	e2 e1       	ldi	r30, 0x12	; 18
 98e:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__epilogue_restores__>

00000992 <strnlen_P>:
 992:	fc 01       	movw	r30, r24
 994:	05 90       	lpm	r0, Z+
 996:	61 50       	subi	r22, 0x01	; 1
 998:	70 40       	sbci	r23, 0x00	; 0
 99a:	01 10       	cpse	r0, r1
 99c:	d8 f7       	brcc	.-10     	; 0x994 <strnlen_P+0x2>
 99e:	80 95       	com	r24
 9a0:	90 95       	com	r25
 9a2:	8e 0f       	add	r24, r30
 9a4:	9f 1f       	adc	r25, r31
 9a6:	08 95       	ret

000009a8 <strnlen>:
 9a8:	fc 01       	movw	r30, r24
 9aa:	61 50       	subi	r22, 0x01	; 1
 9ac:	70 40       	sbci	r23, 0x00	; 0
 9ae:	01 90       	ld	r0, Z+
 9b0:	01 10       	cpse	r0, r1
 9b2:	d8 f7       	brcc	.-10     	; 0x9aa <strnlen+0x2>
 9b4:	80 95       	com	r24
 9b6:	90 95       	com	r25
 9b8:	8e 0f       	add	r24, r30
 9ba:	9f 1f       	adc	r25, r31
 9bc:	08 95       	ret

000009be <fputc>:
 9be:	0f 93       	push	r16
 9c0:	1f 93       	push	r17
 9c2:	cf 93       	push	r28
 9c4:	df 93       	push	r29
 9c6:	fb 01       	movw	r30, r22
 9c8:	23 81       	ldd	r18, Z+3	; 0x03
 9ca:	21 fd       	sbrc	r18, 1
 9cc:	03 c0       	rjmp	.+6      	; 0x9d4 <fputc+0x16>
 9ce:	8f ef       	ldi	r24, 0xFF	; 255
 9d0:	9f ef       	ldi	r25, 0xFF	; 255
 9d2:	2c c0       	rjmp	.+88     	; 0xa2c <fputc+0x6e>
 9d4:	22 ff       	sbrs	r18, 2
 9d6:	16 c0       	rjmp	.+44     	; 0xa04 <fputc+0x46>
 9d8:	46 81       	ldd	r20, Z+6	; 0x06
 9da:	57 81       	ldd	r21, Z+7	; 0x07
 9dc:	24 81       	ldd	r18, Z+4	; 0x04
 9de:	35 81       	ldd	r19, Z+5	; 0x05
 9e0:	42 17       	cp	r20, r18
 9e2:	53 07       	cpc	r21, r19
 9e4:	44 f4       	brge	.+16     	; 0x9f6 <fputc+0x38>
 9e6:	a0 81       	ld	r26, Z
 9e8:	b1 81       	ldd	r27, Z+1	; 0x01
 9ea:	9d 01       	movw	r18, r26
 9ec:	2f 5f       	subi	r18, 0xFF	; 255
 9ee:	3f 4f       	sbci	r19, 0xFF	; 255
 9f0:	31 83       	std	Z+1, r19	; 0x01
 9f2:	20 83       	st	Z, r18
 9f4:	8c 93       	st	X, r24
 9f6:	26 81       	ldd	r18, Z+6	; 0x06
 9f8:	37 81       	ldd	r19, Z+7	; 0x07
 9fa:	2f 5f       	subi	r18, 0xFF	; 255
 9fc:	3f 4f       	sbci	r19, 0xFF	; 255
 9fe:	37 83       	std	Z+7, r19	; 0x07
 a00:	26 83       	std	Z+6, r18	; 0x06
 a02:	14 c0       	rjmp	.+40     	; 0xa2c <fputc+0x6e>
 a04:	8b 01       	movw	r16, r22
 a06:	ec 01       	movw	r28, r24
 a08:	fb 01       	movw	r30, r22
 a0a:	00 84       	ldd	r0, Z+8	; 0x08
 a0c:	f1 85       	ldd	r31, Z+9	; 0x09
 a0e:	e0 2d       	mov	r30, r0
 a10:	09 95       	icall
 a12:	89 2b       	or	r24, r25
 a14:	e1 f6       	brne	.-72     	; 0x9ce <fputc+0x10>
 a16:	d8 01       	movw	r26, r16
 a18:	16 96       	adiw	r26, 0x06	; 6
 a1a:	8d 91       	ld	r24, X+
 a1c:	9c 91       	ld	r25, X
 a1e:	17 97       	sbiw	r26, 0x07	; 7
 a20:	01 96       	adiw	r24, 0x01	; 1
 a22:	17 96       	adiw	r26, 0x07	; 7
 a24:	9c 93       	st	X, r25
 a26:	8e 93       	st	-X, r24
 a28:	16 97       	sbiw	r26, 0x06	; 6
 a2a:	ce 01       	movw	r24, r28
 a2c:	df 91       	pop	r29
 a2e:	cf 91       	pop	r28
 a30:	1f 91       	pop	r17
 a32:	0f 91       	pop	r16
 a34:	08 95       	ret

00000a36 <__ultoa_invert>:
 a36:	fa 01       	movw	r30, r20
 a38:	aa 27       	eor	r26, r26
 a3a:	28 30       	cpi	r18, 0x08	; 8
 a3c:	51 f1       	breq	.+84     	; 0xa92 <__ultoa_invert+0x5c>
 a3e:	20 31       	cpi	r18, 0x10	; 16
 a40:	81 f1       	breq	.+96     	; 0xaa2 <__ultoa_invert+0x6c>
 a42:	e8 94       	clt
 a44:	6f 93       	push	r22
 a46:	6e 7f       	andi	r22, 0xFE	; 254
 a48:	6e 5f       	subi	r22, 0xFE	; 254
 a4a:	7f 4f       	sbci	r23, 0xFF	; 255
 a4c:	8f 4f       	sbci	r24, 0xFF	; 255
 a4e:	9f 4f       	sbci	r25, 0xFF	; 255
 a50:	af 4f       	sbci	r26, 0xFF	; 255
 a52:	b1 e0       	ldi	r27, 0x01	; 1
 a54:	3e d0       	rcall	.+124    	; 0xad2 <__ultoa_invert+0x9c>
 a56:	b4 e0       	ldi	r27, 0x04	; 4
 a58:	3c d0       	rcall	.+120    	; 0xad2 <__ultoa_invert+0x9c>
 a5a:	67 0f       	add	r22, r23
 a5c:	78 1f       	adc	r23, r24
 a5e:	89 1f       	adc	r24, r25
 a60:	9a 1f       	adc	r25, r26
 a62:	a1 1d       	adc	r26, r1
 a64:	68 0f       	add	r22, r24
 a66:	79 1f       	adc	r23, r25
 a68:	8a 1f       	adc	r24, r26
 a6a:	91 1d       	adc	r25, r1
 a6c:	a1 1d       	adc	r26, r1
 a6e:	6a 0f       	add	r22, r26
 a70:	71 1d       	adc	r23, r1
 a72:	81 1d       	adc	r24, r1
 a74:	91 1d       	adc	r25, r1
 a76:	a1 1d       	adc	r26, r1
 a78:	20 d0       	rcall	.+64     	; 0xaba <__ultoa_invert+0x84>
 a7a:	09 f4       	brne	.+2      	; 0xa7e <__ultoa_invert+0x48>
 a7c:	68 94       	set
 a7e:	3f 91       	pop	r19
 a80:	2a e0       	ldi	r18, 0x0A	; 10
 a82:	26 9f       	mul	r18, r22
 a84:	11 24       	eor	r1, r1
 a86:	30 19       	sub	r19, r0
 a88:	30 5d       	subi	r19, 0xD0	; 208
 a8a:	31 93       	st	Z+, r19
 a8c:	de f6       	brtc	.-74     	; 0xa44 <__ultoa_invert+0xe>
 a8e:	cf 01       	movw	r24, r30
 a90:	08 95       	ret
 a92:	46 2f       	mov	r20, r22
 a94:	47 70       	andi	r20, 0x07	; 7
 a96:	40 5d       	subi	r20, 0xD0	; 208
 a98:	41 93       	st	Z+, r20
 a9a:	b3 e0       	ldi	r27, 0x03	; 3
 a9c:	0f d0       	rcall	.+30     	; 0xabc <__ultoa_invert+0x86>
 a9e:	c9 f7       	brne	.-14     	; 0xa92 <__ultoa_invert+0x5c>
 aa0:	f6 cf       	rjmp	.-20     	; 0xa8e <__ultoa_invert+0x58>
 aa2:	46 2f       	mov	r20, r22
 aa4:	4f 70       	andi	r20, 0x0F	; 15
 aa6:	40 5d       	subi	r20, 0xD0	; 208
 aa8:	4a 33       	cpi	r20, 0x3A	; 58
 aaa:	18 f0       	brcs	.+6      	; 0xab2 <__ultoa_invert+0x7c>
 aac:	49 5d       	subi	r20, 0xD9	; 217
 aae:	31 fd       	sbrc	r19, 1
 ab0:	40 52       	subi	r20, 0x20	; 32
 ab2:	41 93       	st	Z+, r20
 ab4:	02 d0       	rcall	.+4      	; 0xaba <__ultoa_invert+0x84>
 ab6:	a9 f7       	brne	.-22     	; 0xaa2 <__ultoa_invert+0x6c>
 ab8:	ea cf       	rjmp	.-44     	; 0xa8e <__ultoa_invert+0x58>
 aba:	b4 e0       	ldi	r27, 0x04	; 4
 abc:	a6 95       	lsr	r26
 abe:	97 95       	ror	r25
 ac0:	87 95       	ror	r24
 ac2:	77 95       	ror	r23
 ac4:	67 95       	ror	r22
 ac6:	ba 95       	dec	r27
 ac8:	c9 f7       	brne	.-14     	; 0xabc <__ultoa_invert+0x86>
 aca:	00 97       	sbiw	r24, 0x00	; 0
 acc:	61 05       	cpc	r22, r1
 ace:	71 05       	cpc	r23, r1
 ad0:	08 95       	ret
 ad2:	9b 01       	movw	r18, r22
 ad4:	ac 01       	movw	r20, r24
 ad6:	0a 2e       	mov	r0, r26
 ad8:	06 94       	lsr	r0
 ada:	57 95       	ror	r21
 adc:	47 95       	ror	r20
 ade:	37 95       	ror	r19
 ae0:	27 95       	ror	r18
 ae2:	ba 95       	dec	r27
 ae4:	c9 f7       	brne	.-14     	; 0xad8 <__ultoa_invert+0xa2>
 ae6:	62 0f       	add	r22, r18
 ae8:	73 1f       	adc	r23, r19
 aea:	84 1f       	adc	r24, r20
 aec:	95 1f       	adc	r25, r21
 aee:	a0 1d       	adc	r26, r0
 af0:	08 95       	ret

00000af2 <__prologue_saves__>:
 af2:	2f 92       	push	r2
 af4:	3f 92       	push	r3
 af6:	4f 92       	push	r4
 af8:	5f 92       	push	r5
 afa:	6f 92       	push	r6
 afc:	7f 92       	push	r7
 afe:	8f 92       	push	r8
 b00:	9f 92       	push	r9
 b02:	af 92       	push	r10
 b04:	bf 92       	push	r11
 b06:	cf 92       	push	r12
 b08:	df 92       	push	r13
 b0a:	ef 92       	push	r14
 b0c:	ff 92       	push	r15
 b0e:	0f 93       	push	r16
 b10:	1f 93       	push	r17
 b12:	cf 93       	push	r28
 b14:	df 93       	push	r29
 b16:	cd b7       	in	r28, 0x3d	; 61
 b18:	de b7       	in	r29, 0x3e	; 62
 b1a:	ca 1b       	sub	r28, r26
 b1c:	db 0b       	sbc	r29, r27
 b1e:	0f b6       	in	r0, 0x3f	; 63
 b20:	f8 94       	cli
 b22:	de bf       	out	0x3e, r29	; 62
 b24:	0f be       	out	0x3f, r0	; 63
 b26:	cd bf       	out	0x3d, r28	; 61
 b28:	09 94       	ijmp

00000b2a <__epilogue_restores__>:
 b2a:	2a 88       	ldd	r2, Y+18	; 0x12
 b2c:	39 88       	ldd	r3, Y+17	; 0x11
 b2e:	48 88       	ldd	r4, Y+16	; 0x10
 b30:	5f 84       	ldd	r5, Y+15	; 0x0f
 b32:	6e 84       	ldd	r6, Y+14	; 0x0e
 b34:	7d 84       	ldd	r7, Y+13	; 0x0d
 b36:	8c 84       	ldd	r8, Y+12	; 0x0c
 b38:	9b 84       	ldd	r9, Y+11	; 0x0b
 b3a:	aa 84       	ldd	r10, Y+10	; 0x0a
 b3c:	b9 84       	ldd	r11, Y+9	; 0x09
 b3e:	c8 84       	ldd	r12, Y+8	; 0x08
 b40:	df 80       	ldd	r13, Y+7	; 0x07
 b42:	ee 80       	ldd	r14, Y+6	; 0x06
 b44:	fd 80       	ldd	r15, Y+5	; 0x05
 b46:	0c 81       	ldd	r16, Y+4	; 0x04
 b48:	1b 81       	ldd	r17, Y+3	; 0x03
 b4a:	aa 81       	ldd	r26, Y+2	; 0x02
 b4c:	b9 81       	ldd	r27, Y+1	; 0x01
 b4e:	ce 0f       	add	r28, r30
 b50:	d1 1d       	adc	r29, r1
 b52:	0f b6       	in	r0, 0x3f	; 63
 b54:	f8 94       	cli
 b56:	de bf       	out	0x3e, r29	; 62
 b58:	0f be       	out	0x3f, r0	; 63
 b5a:	cd bf       	out	0x3d, r28	; 61
 b5c:	ed 01       	movw	r28, r26
 b5e:	08 95       	ret

00000b60 <_exit>:
 b60:	f8 94       	cli

00000b62 <__stop_program>:
 b62:	ff cf       	rjmp	.-2      	; 0xb62 <__stop_program>
