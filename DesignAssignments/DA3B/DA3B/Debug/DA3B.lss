
DA3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000270  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  000002e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000799  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f5  00000000  00000000  00000ab9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000310  00000000  00000000  000011ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  000014c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000038e  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000ec  00000000  00000000  000018ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000019ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 c1 00 	jmp	0x182	; 0x182 <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  88:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <usart_init>:

void usart_print(char* str){
	int i = 0;
	while (str[i] != 0)
		usart_send(str[i]);
}
  90:	88 e0       	ldi	r24, 0x08	; 8
  92:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  96:	86 e0       	ldi	r24, 0x06	; 6
  98:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  9c:	87 e6       	ldi	r24, 0x67	; 103
  9e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  a2:	08 95       	ret

000000a4 <usart_send>:
  a4:	e0 ec       	ldi	r30, 0xC0	; 192
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	90 81       	ld	r25, Z
  aa:	95 ff       	sbrs	r25, 5
  ac:	fd cf       	rjmp	.-6      	; 0xa8 <usart_send+0x4>
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b2:	08 95       	ret

000000b4 <main>:
  b4:	0e 94 48 00 	call	0x90	; 0x90 <usart_init>
  b8:	85 e4       	ldi	r24, 0x45	; 69
  ba:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  be:	85 e8       	ldi	r24, 0x85	; 133
  c0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  c4:	80 e4       	ldi	r24, 0x40	; 64
  c6:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  ca:	e1 e8       	ldi	r30, 0x81	; 129
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	85 60       	ori	r24, 0x05	; 5
  d2:	80 83       	st	Z, r24
  d4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
  d8:	88 e0       	ldi	r24, 0x08	; 8
  da:	9d e3       	ldi	r25, 0x3D	; 61
  dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  e0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  e4:	ef e6       	ldi	r30, 0x6F	; 111
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	86 60       	ori	r24, 0x06	; 6
  ec:	80 83       	st	Z, r24
  ee:	78 94       	sei
  f0:	ca e7       	ldi	r28, 0x7A	; 122
  f2:	d0 e0       	ldi	r29, 0x00	; 0
  f4:	0f 2e       	mov	r0, r31
  f6:	f8 e7       	ldi	r31, 0x78	; 120
  f8:	af 2e       	mov	r10, r31
  fa:	b1 2c       	mov	r11, r1
  fc:	f0 2d       	mov	r31, r0
  fe:	0f 2e       	mov	r0, r31
 100:	f9 e7       	ldi	r31, 0x79	; 121
 102:	cf 2e       	mov	r12, r31
 104:	d1 2c       	mov	r13, r1
 106:	f0 2d       	mov	r31, r0
 108:	0f 2e       	mov	r0, r31
 10a:	f4 e6       	ldi	r31, 0x64	; 100
 10c:	ef 2e       	mov	r14, r31
 10e:	f1 2c       	mov	r15, r1
 110:	f0 2d       	mov	r31, r0
 112:	0f 2e       	mov	r0, r31
 114:	fa e0       	ldi	r31, 0x0A	; 10
 116:	8f 2e       	mov	r8, r31
 118:	91 2c       	mov	r9, r1
 11a:	f0 2d       	mov	r31, r0
 11c:	04 e8       	ldi	r16, 0x84	; 132
 11e:	10 e0       	ldi	r17, 0x00	; 0
 120:	88 81       	ld	r24, Y
 122:	80 64       	ori	r24, 0x40	; 64
 124:	88 83       	st	Y, r24
 126:	88 81       	ld	r24, Y
 128:	84 ff       	sbrs	r24, 4
 12a:	fd cf       	rjmp	.-6      	; 0x126 <main+0x72>
 12c:	88 81       	ld	r24, Y
 12e:	80 61       	ori	r24, 0x10	; 16
 130:	88 83       	st	Y, r24
 132:	f5 01       	movw	r30, r10
 134:	80 81       	ld	r24, Z
 136:	f6 01       	movw	r30, r12
 138:	20 81       	ld	r18, Z
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	92 2b       	or	r25, r18
 13e:	b7 01       	movw	r22, r14
 140:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__divmodhi4>
 144:	3c 01       	movw	r6, r24
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	86 0f       	add	r24, r22
 14a:	0e 94 52 00 	call	0xa4	; 0xa4 <usart_send>
 14e:	c3 01       	movw	r24, r6
 150:	b4 01       	movw	r22, r8
 152:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__divmodhi4>
 156:	78 2e       	mov	r7, r24
 158:	80 e3       	ldi	r24, 0x30	; 48
 15a:	86 0f       	add	r24, r22
 15c:	0e 94 52 00 	call	0xa4	; 0xa4 <usart_send>
 160:	80 e3       	ldi	r24, 0x30	; 48
 162:	87 0d       	add	r24, r7
 164:	0e 94 52 00 	call	0xa4	; 0xa4 <usart_send>
 168:	8d e0       	ldi	r24, 0x0D	; 13
 16a:	0e 94 52 00 	call	0xa4	; 0xa4 <usart_send>
 16e:	f8 01       	movw	r30, r16
 170:	11 82       	std	Z+1, r1	; 0x01
 172:	10 82       	st	Z, r1
 174:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 178:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 17c:	88 23       	and	r24, r24
 17e:	e1 f3       	breq	.-8      	; 0x178 <main+0xc4>
 180:	cf cf       	rjmp	.-98     	; 0x120 <main+0x6c>

00000182 <__vector_11>:


ISR(TIMER1_COMPA_vect)
{
 182:	1f 92       	push	r1
 184:	0f 92       	push	r0
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	0f 92       	push	r0
 18a:	11 24       	eor	r1, r1
 18c:	8f 93       	push	r24
	TCNT1 = 0;
 18e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 192:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	compACheck = 1;
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
}
 19c:	8f 91       	pop	r24
 19e:	0f 90       	pop	r0
 1a0:	0f be       	out	0x3f, r0	; 63
 1a2:	0f 90       	pop	r0
 1a4:	1f 90       	pop	r1
 1a6:	18 95       	reti

000001a8 <__divmodhi4>:
 1a8:	97 fb       	bst	r25, 7
 1aa:	07 2e       	mov	r0, r23
 1ac:	16 f4       	brtc	.+4      	; 0x1b2 <__divmodhi4+0xa>
 1ae:	00 94       	com	r0
 1b0:	07 d0       	rcall	.+14     	; 0x1c0 <__divmodhi4_neg1>
 1b2:	77 fd       	sbrc	r23, 7
 1b4:	09 d0       	rcall	.+18     	; 0x1c8 <__divmodhi4_neg2>
 1b6:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <__udivmodhi4>
 1ba:	07 fc       	sbrc	r0, 7
 1bc:	05 d0       	rcall	.+10     	; 0x1c8 <__divmodhi4_neg2>
 1be:	3e f4       	brtc	.+14     	; 0x1ce <__divmodhi4_exit>

000001c0 <__divmodhi4_neg1>:
 1c0:	90 95       	com	r25
 1c2:	81 95       	neg	r24
 1c4:	9f 4f       	sbci	r25, 0xFF	; 255
 1c6:	08 95       	ret

000001c8 <__divmodhi4_neg2>:
 1c8:	70 95       	com	r23
 1ca:	61 95       	neg	r22
 1cc:	7f 4f       	sbci	r23, 0xFF	; 255

000001ce <__divmodhi4_exit>:
 1ce:	08 95       	ret

000001d0 <__udivmodhi4>:
 1d0:	aa 1b       	sub	r26, r26
 1d2:	bb 1b       	sub	r27, r27
 1d4:	51 e1       	ldi	r21, 0x11	; 17
 1d6:	07 c0       	rjmp	.+14     	; 0x1e6 <__udivmodhi4_ep>

000001d8 <__udivmodhi4_loop>:
 1d8:	aa 1f       	adc	r26, r26
 1da:	bb 1f       	adc	r27, r27
 1dc:	a6 17       	cp	r26, r22
 1de:	b7 07       	cpc	r27, r23
 1e0:	10 f0       	brcs	.+4      	; 0x1e6 <__udivmodhi4_ep>
 1e2:	a6 1b       	sub	r26, r22
 1e4:	b7 0b       	sbc	r27, r23

000001e6 <__udivmodhi4_ep>:
 1e6:	88 1f       	adc	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	5a 95       	dec	r21
 1ec:	a9 f7       	brne	.-22     	; 0x1d8 <__udivmodhi4_loop>
 1ee:	80 95       	com	r24
 1f0:	90 95       	com	r25
 1f2:	bc 01       	movw	r22, r24
 1f4:	cd 01       	movw	r24, r26
 1f6:	08 95       	ret

000001f8 <_exit>:
 1f8:	f8 94       	cli

000001fa <__stop_program>:
 1fa:	ff cf       	rjmp	.-2      	; 0x1fa <__stop_program>
